mongodb :
js:client side 

nodejs : server side 

create a web services :


  <div className="w-[70%] h-full  flex justify-between  m-auto p-[10%] items-center">
        <h2 className="text-4xl font-bold text-gray-900 mb-6">Our Services</h2>

        {loading ? (
          <div className="flex justify-center items-center">
            <div className="w-12 h-12 border-4 border-blue-500 border-t-transparent rounded-full animate-spin" />
          </div>
        ) : services.length === 0 ? (
          <p className="text-gray-600">No services available at the moment.</p>
        ) : (
          
            {services.map((service, index) => (
              <div
                key={service.id}
                className="bg-white rounded-xl shadow-lg overflow-hidden transform hover:shadow-xl hover:scale-[1.05] transition duration-300"
              >
                {/* Service Image */}
                
                  <img
                    src={service.imageURL || "/default-service.jpg"}
                    alt={service.name}
                    className=" object-contain h-[80%] w-[40%] "
                  />
                  {/* Availability Badge */}
                 
                    <span
                      className={`inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-semibold ${
                        service.availability
                          ? "bg-green-100 text-green-800"
                          : "bg-red-100 text-red-800"
                      }`}
                    >
                      {service.availability ? "Available" : "Not Available"}
                    </span>
                  
               

                {/* Service Details */}
               
                  <h3 className="text-2xl font-bold text-blue-600 mb-2">
                    {service.name}
                  </h3>
                  <p className="text-gray-600 mb-3">{service.description}</p>

                  <div className="flex items-center justify-between mb-2">
                    <span className="text-gray-700 font-semibold">Price:</span>
                    <span className="text-blue-500">
                      ${service.price || "N/A"}
                    </span>
                  

                  <div className="flex items-center justify-between mb-2">
                    <span className="text-gray-700 font-semibold">
                      Category:
                    </span>
                    <span className="text-gray-600">
                      {service.category || "N/A"}
                    </span>
                  

                  <div className="flex items-center justify-between mb-2">
                    <span className="text-gray-700 font-semibold">
                      Duration:
                    </span>
                    <span className="text-gray-600">
                      {service.duration || "N/A"} mins
                    </span>
                  </div>

                  <div className="flex items-center justify-between">
                    <span className="text-gray-700 font-semibold">
                      Ratings:
                    </span>
                    <div className="flex items-center">
                      <span className="text-yellow-500">‚≠ê</span>
                      <span className="text-gray-600 ml-1">
                        {service.ratings || "N/A"}/5
                      </span>
                    </div>
                  </div>

                  <p className="text-gray-500 text-sm mt-4">
                    Last updated{" "}
                    {new Date(service.updatedAt).toLocaleDateString()}
                  </p>
                </div>

              </div>
            ))}
          </div>
        )}
      </div>

      import axios from "axios";
import React, { useState } from "react";
import { useForm } from "react-hook-form";
import "./Login.css"; 
import { Link, useNavigate } from "react-router-dom";
import { ToastContainer, toast } from "react-toastify";
import "react-toastify/dist/ReactToastify.css"; 

export const Login = () => {
  const navigate = useNavigate();
  const { register, handleSubmit } = useForm();
  const [message, setMessage] = useState("");

  const submitHandler = async (data) => {
    try {
      console.log("Login Data:", data);
      
      // Assign roleId based on selected role
      data.roleId = data.role === "User" 
        ? "67dae822f5afbc68f03c2d8f" 
        : "67dae8acf5afbc68f03c2d91";

      const res = await axios.post("/user/login", data);
      console.log("Server Response:", res.data);

      if (res.status === 200) {
        localStorage.setItem("id", res.data.data._id);
        localStorage.setItem("role", res.data.data.roleId.name); // Store role name instead of ID
      
        toast.success("Login successful!", {
          position: "top-right",
          autoClose: 3000,
          hideProgressBar: false,
          closeOnClick: true,
          pauseOnHover: false,
          draggable: true,
          theme: "colored",
        });
      
        setTimeout(() => {
          if (res.data.data.roleId.name === "User") {
            navigate("/user"); // Show User Sidebar
          } else if (res.data.data.roleId.name === "Parking Provider") {
            navigate("/parkingowner"); // Show Parking Provider Sidebar
          } else {
            navigate("/"); // Default redirect if role is unknown
          }
        }, 3000);
      }
       else {
        setMessage("Invalid credentials. Please try again.");
      }
    } catch (error) {
      console.error("Error:", error);
      toast.error("Error: Unable to login.", {
        position: "top-right",
        autoClose: 3000,
        hideProgressBar: false,
        closeOnClick: true,
        pauseOnHover: false,
        draggable: true,
        theme: "colored",
      });
    }
  };

  return (
    <div className="login-page">  
      <div className="login-form-container">  
        <h1 className="form-title">LOGIN</h1>  
        {message && <p className="login-message">{message}</p>}

        <form onSubmit={handleSubmit(submitHandler)}>

        {/* <div className="form-group">
            <label>Select Role</label>
            <select {...register("role")} required>
              <option value="">Select Role</option>
              <option value="User">User</option>
              <option value="Parking Provider">Parking Provider</option>
            </select>
          </div> */}

          <div className="form-group">
            <label>Email</label>
            <input type="email" {...register("email")} required />
          </div>

          <div className="form-group">
            <label>Password</label>
            <input type="password" {...register("password")} required />
          </div>
          
          <div className="forgot-password">
            <Link to="/forgot-password" className="forgot-password-link">Forgot Password?</Link>
          </div>

          <div className="form-group">
            <button type="submit" className="submit-button">Login</button>  
          </div>
        </form>

        <ToastContainer />
      </div>
    </div>
  );
};

{/* Logo Image */}
  <img
    src="" // Change to your actual image path
    alt="MyMechanic Logo"
    style={{
      width: "80px",
      height: "80px",
      borderRadius: "50%",
      marginBottom: "1rem",
      objectFit: "cover",
      border: "2px solid #2d3436"
    }}
  />



  